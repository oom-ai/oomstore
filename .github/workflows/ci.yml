name: ci
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    - name: Build
      run: make build

  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    env:
      golangci-lint-version: 'v1.42.1'
    steps:
    - name: Install docker
      run: brew install docker
      if: runner.os == 'macOS'
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    - name: Cache golangci-lint
      uses: actions/cache@v2
      env:
        cache-name: cache-golangci-lint
      with:
        path: ~/bin/golangci-lint
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.golangci-lint-version }}
    - name: Install golangci-lint
      run: |
        echo ~/bin >> $GITHUB_PATH
        ~/bin/golangci-lint --version && exit 0
        mkdir -p ~/bin
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
        sh -s -- -b ~/bin ${{ env.golangci-lint-version }}
    - uses: actions/setup-python@v2
    - name: Run pre-commit
      run: |
        pip install pre-commit &&
        pre-commit run --all --show-diff-on-failure

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    services:
      postgres:
        image: postgres:14.0-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=3
    steps:
    - name: Install docker
      run: brew install docker
      if: runner.os == 'macOS'
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    - name: Install test dependencies
      run: go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest
    - name: Run unit tests
      run: make test
    - name: Run integration tests
      run: make integration-test
    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.out
        fail_ci_if_error: false
        verbose: true
